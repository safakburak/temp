package com.ekinoksyazilim.etkk.prototype.middle;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.concurrent.CompletableFuture;

import com.ekinoksyazilim.etkk.prototype.left.IBottomLeft;

public class Middle implements IMiddle {

	private IBottomLeft bottomLeft;
	
	private IBottomLeft bottomRight;
	
	@Override
	public CompletableFuture<Integer> sum(Integer[] inputs) {

		return CompletableFuture.supplyAsync(() -> {

			Integer[] part1 = Arrays.copyOfRange(inputs, 0, inputs.length / 2);
			Integer[] part2 = Arrays.copyOfRange(inputs, inputs.length / 2, inputs.length);
			
			CompletableFuture<Integer> future1 = bottomLeft.sum(part1);
			CompletableFuture<Integer> future2 = bottomLeft.sum(part2);

			Integer result = future1.get() + future2.get();
			
			return result;
		});
	}
	
	public void setBottomLeft(IBottomLeft bottomLeft) {
		
		this.bottomLeft = bottomLeft;
	}
	
	public void setBottomRight(IBottomLeft bottomRight) {
		
		this.bottomRight = bottomRight;
	}
}
