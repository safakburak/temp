package com.ekinoksyazilim.etkk.prototype.tools;

import java.io.File;
import java.lang.reflect.Field;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.Collection;

import org.osgi.framework.BundleContext;
import org.osgi.framework.wiring.BundleWiring;

public class ResourceBundleReplacer {

	public static void replace(BundleContext bc) {
	
		BundleWiring bw = bc.getBundle().adapt(BundleWiring.class);
		
		Collection<String> resources = bw.listResources("/", "*",
                BundleWiring.LISTRESOURCES_LOCAL | BundleWiring.LISTRESOURCES_RECURSE);
		
		ClassLoader cl = bw.getClassLoader();
		
		for(String resource : resources) {
			
			if (resource.startsWith("com/") && resource.endsWith("Messages.class")
                    && resource.indexOf("$") == -1) {
				
				String className = resource.replaceAll("/", ".");
				className = className.substring(0, className.length() - ".class".length());
				
				 Class<?> clazz = null;
				 Field field = null;
				 
                 try {
                	 
                     clazz = cl.loadClass(className);
                     
                     field = clazz.getDeclaredField("BUNDLE_NAME");
                     field.setAccessible(true);
                     String resourceName = (String) field.get(null);
                     
                     URLClassLoader urlLoader = new URLClassLoader(new URL[]{new File("resources").toURI().toURL()});
                     
                     
                     
                     field = clazz.getDeclaredField("RESOURCE_BUNDLE");
                     
                 } catch(Exception e) {
                	 
                	 continue;
                 }
                 
			}
		}
	}
}
